on:
  release:
    types: [created]

jobs:
  build-and-upload:
    name: Build ${{ matrix.target }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            
          - target: x86_64-apple-darwin
            os: macos-latest
            
          - target: aarch64-apple-darwin
            os: macos-latest
            
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            cpu: broadwell-
            rustflags: -Ctarget-cpu=broadwell -Cembed-bitcode=yes -Clto=fat -Ztune-cpu=broadwell
    steps:    
      - name: Check out repository code
        uses: actions/checkout@v3 
      
      - name: Setup environment
        run: mkdir temp
        shell: bash
              
      - name: Setup rust
        run: |
          rustup install nightly
          rustup default nightly
          rustup target add ${{ matrix.target }}
      
      - name: Compile artifacts
        run: |
          set RUSTFLAGS="${{ matrix.rustflags }}"
          cargo build --out-dir=temp -Z unstable-options --target=${{ matrix.target }} --release
        
      - name: Compress artifacts
        uses: papeloto/action-zip@v1
        with:
          files: temp
          dest: client-${{matrix.cpu}}${{ matrix.target }}.zip
            
      - name: Upload the release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }} 
          asset_path: client-${{matrix.cpu}}${{ matrix.target }}.zip
          asset_name: client-${{matrix.cpu}}${{ matrix.target }}.zip
          asset_content_type: application/octet-stream
